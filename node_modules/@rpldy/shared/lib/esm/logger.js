import { DEBUG_LOG_KEY } from "./consts";
import hasWindow from "./utils/hasWindow";
import { isProduction } from "./utils";
var isDebug;

var isEnvDebug = function () {
  var _process, _process$env;

  return !isProduction() && ((_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.DEBUG);
};

var isDebugOn = function () {
  if (typeof isDebug !== "boolean") {
    isDebug = isEnvDebug() || hasWindow() && ("location" in window && !!~window.location.search.indexOf("rpldy_debug=true") || window[DEBUG_LOG_KEY] === true);
  }

  return isDebug;
};

var setDebug = function (debugOn) {
  if (hasWindow()) {
    window[DEBUG_LOG_KEY] = debugOn;
  }

  isDebug = debugOn ? true : null;
};

var debugLog = function () {
  if (isDebugOn()) {
    var _console;

    // eslint-disable-next-line no-console
    (_console = console).log.apply(_console, arguments);
  }
};

export { isDebugOn, setDebug, debugLog };